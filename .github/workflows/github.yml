# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI/CD
on:
  push:
    branches: [ "main", "develop"]
  pull_request:
    branches: [ "main", "develop"]

jobs:
  build-to-main:
    runs-on: ubuntu-latest
    steps:
#    - name: Checkout GitHub Action
#      if: ${{ github.ref == 'refs/heads/main' }}
#      uses: actions/checkout@v2
#    - name: Set up JDK 1.8
#      if: ${{ github.ref == 'refs/heads/main' }}
#      uses: actions/setup-java@v1
#      with:
#        java-version: '1.8'
#        cache: maven
#    - name: Build with Maven
#      if: ${{ github.ref == 'refs/heads/main' }}
#      run: mvn -B package --file pom.xml -Dmaven.test.skip=true
#    - name: Build & Push Docker Image
#      if: ${{ github.ref == 'refs/heads/main' }}
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: chjplove/kafka-producer-processor
#        tags: latest
#        registry: docker.io
#        username: ${{secrets.DOCKER_USERNAME}}
#        password: ${{secrets.DOCKER_PASSWORD}}
# -----------
#    - name: Deploy
#      uses: fjogeleit/http-request-action@master
#      with:
#        url: 'https://35.186.146.185/v3/project/c-zmk9v:p-fbbrp/workload/deployment:default:kafka-producer-processor'
#        method: 'PUT'
#        bearerToken: 'token-q2w6j:xm6xqs2tdjsw9vrbm9mm9l98g6hgw2fw7j29crbhn45sd44gjrf9vx'
#        data: '{"scale": 1}'
# ------------
#    - name: Run a script on remote server (start the application)
#      if: ${{ github.ref == 'refs/heads/main' }}
#      uses: fifsky/ssh-action@master
#      with:
#        command: |
#          docker stop kafka-producer-processor
#          docker container rm kafka-producer-processor
#          docker image rm chjplove/kafka-producer-processor
#          docker pull chjplove/kafka-producer-processor
#          docker run -p 7001:7001 --name kafka-producer-processor -d chjplove/kafka-producer-processor:latest
#        host: ${{ secrets.HOST }}
#        user: ${{ secrets.SSH_USER }}
#        pass: ${{ secrets.SSH_PASSWORD }}
#        args: "-tt"


